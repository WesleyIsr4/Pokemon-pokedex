{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/wesley/workspace/projects/pokedex/src/pages/pokemon/[id].tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function Pokemon({\n  pokemon\n}) {\n  console.log();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokemon.sprites.front_default,\n      alt: \"Imagem do pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\nPokemon.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.string,\n    sprites: PropTypes.shape({\n      front_default: PropTypes.string\n    })\n  }).isRequired\n};\nexport async function getStaticProps({\n  params\n}) {\n  console.log(params);\n  const pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`).then(responseOfServe => {\n    if (responseOfServe.ok) {\n      return responseOfServe.json();\n    }\n\n    throw new Error(\"Deu problema\");\n  }).then(responseInObject => {\n    return responseInObject;\n  });\n  return {\n    props: {\n      pokemon\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //Basicamente o mesmo código da Home, com diferença no return\n  const pokemons = await fetch(\"https://pokeapi.co/api/v2/pokedex/2/\").then(respostaDoServer => {\n    if (respostaDoServer.ok) {\n      return respostaDoServer.json();\n    }\n\n    throw new Error(\"Deu problema\");\n  }).then(respostaEmObjeto => respostaEmObjeto.pokemon_entries);\n  return {\n    paths: pokemons.map(pokemon => ({\n      //pra cada pokemon na resposta, um caminho sera gerado\n      params: {\n        id: pokemon.entry_number.toString() //necessario usar o toString porque não aceita inteiro como caminho (path)\n\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/wesley/workspace/projects/pokedex/src/pages/pokemon/[id].tsx"],"names":["React","PropTypes","Pokemon","pokemon","console","log","sprites","front_default","propTypes","shape","name","string","isRequired","getStaticProps","params","fetch","id","then","responseOfServe","ok","json","Error","responseInObject","props","getStaticPaths","pokemons","respostaDoServer","respostaEmObjeto","pokemon_entries","paths","map","entry_number","toString","fallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC3CC,EAAAA,OAAO,CAACC,GAAR;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEF,OAAO,CAACG,OAAR,CAAgBC,aAA1B;AAAyC,MAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAEDL,OAAO,CAACM,SAAR,GAAoB;AAClBL,EAAAA,OAAO,EAAEF,SAAS,CAACQ,KAAV,CAAgB;AACvBC,IAAAA,IAAI,EAAET,SAAS,CAACU,MADO;AAEvBL,IAAAA,OAAO,EAAEL,SAAS,CAACQ,KAAV,CAAgB;AACvBF,MAAAA,aAAa,EAAEN,SAAS,CAACU;AADF,KAAhB;AAFc,GAAhB,EAKNC;AANe,CAApB;AASA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/CV,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACA,QAAMX,OAAO,GAAG,MAAMY,KAAK,CAAE,qCAAoCD,MAAM,CAACE,EAAG,EAAhD,CAAL,CACnBC,IADmB,CACbC,eAAD,IAAqB;AACzB,QAAIA,eAAe,CAACC,EAApB,EAAwB;AACtB,aAAOD,eAAe,CAACE,IAAhB,EAAP;AACD;;AAED,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD,GAPmB,EAQnBJ,IARmB,CAQbK,gBAAD,IAAsB;AAC1B,WAAOA,gBAAP;AACD,GAVmB,CAAtB;AAWA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLpB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,OAAO,eAAeqB,cAAf,GAAgC;AACrC;AACA,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,sCAAD,CAAL,CACpBE,IADoB,CACdS,gBAAD,IAAsB;AAC1B,QAAIA,gBAAgB,CAACP,EAArB,EAAyB;AACvB,aAAOO,gBAAgB,CAACN,IAAjB,EAAP;AACD;;AACD,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD,GANoB,EAOpBJ,IAPoB,CAOdU,gBAAD,IAAsBA,gBAAgB,CAACC,eAPxB,CAAvB;AAQA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,QAAQ,CAACK,GAAT,CAAc3B,OAAD,KAAc;AAChC;AACAW,MAAAA,MAAM,EAAE;AACNE,QAAAA,EAAE,EAAEb,OAAO,CAAC4B,YAAR,CAAqBC,QAArB,EADE,CAC+B;;AAD/B;AAFwB,KAAd,CAAb,CADF;AAOLC,IAAAA,QAAQ,EAAE;AAPL,GAAP;AASD","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Pokemon({ pokemon }) {\n  console.log();\n  return (\n    <div>\n      <img src={pokemon.sprites.front_default} alt=\"Imagem do pokemon\" />\n    </div>\n  );\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.string,\n    sprites: PropTypes.shape({\n      front_default: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport async function getStaticProps({ params }) {\n  console.log(params);\n  const pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`)\n    .then((responseOfServe) => {\n      if (responseOfServe.ok) {\n        return responseOfServe.json();\n      }\n\n      throw new Error(\"Deu problema\");\n    })\n    .then((responseInObject) => {\n      return responseInObject;\n    });\n  return {\n    props: {\n      pokemon,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  //Basicamente o mesmo código da Home, com diferença no return\n  const pokemons = await fetch(\"https://pokeapi.co/api/v2/pokedex/2/\")\n    .then((respostaDoServer) => {\n      if (respostaDoServer.ok) {\n        return respostaDoServer.json();\n      }\n      throw new Error(\"Deu problema\");\n    })\n    .then((respostaEmObjeto) => respostaEmObjeto.pokemon_entries);\n  return {\n    paths: pokemons.map((pokemon) => ({\n      //pra cada pokemon na resposta, um caminho sera gerado\n      params: {\n        id: pokemon.entry_number.toString(), //necessario usar o toString porque não aceita inteiro como caminho (path)\n      },\n    })),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}